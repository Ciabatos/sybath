// GENERATED CODE - DO NOT EDIT MANUALLY - hookGetTableServer.hbs
"use server"

import { {{indexMethodName}} } from "@/methods/functions/converters"
import { get{{methodName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{tablePascalName}}"
{{#if paramsFields}}import { {{typeName}}Params } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{tablePascalName}}"{{/if}}
{{#if (eq indexMethodName "arrayToObjectKeysId")}}
import type { {{typeName}}RecordBy{{typeRecordName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{tablePascalName}}"
{{else}}
import type { {{typeName}}RecordBy{{typeRecordName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{tablePascalName}}"
{{/if}}



export async function get{{methodName}}Server({{#if paramsFields}}params: {{typeName}}Params{{/if}}): Promise<{{typeName}}RecordBy{{typeRecordName}}> {
  const get{{methodName}}Data = await get{{methodName}}({{#if paramsFields}}parsedParams{{/if}})

  const data = get{{methodName}}Data ? ({{{indexMethodName}}}({{{indexMethodArgs}}}, get{{methodName}}Data) as {{typeName}}RecordBy{{typeRecordName}}) : {}

  return data
}
