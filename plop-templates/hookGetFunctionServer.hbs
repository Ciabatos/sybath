// GENERATED CODE - DO NOT EDIT MANUALLY - hookGetFunctionServer.hbs
"use server"

import { get{{methodPascalName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{methodCamelName}}"
import { {{indexMethodName}} } from "@/methods/functions/converters"
{{#if indexFields}}
import type { T{{methodPascalName}}RecordBy{{typeRecordName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{methodCamelName}}"
{{/if}}

export async function get{{methodPascalName}}Server(){{#if indexFields}}: Promise<T{{methodPascalName}}RecordBy{{typeRecordName}}>{{/if}} {
  const data = await {{methodCamelName}}({{#if paramsFields}}parsedParams{{/if}})


  const index = data
    ? ({{{indexMethodName}}}({{{indexMethodArgs}}}, data) as T{{methodPascalName}}RecordBy{{typeRecordName}})
    : {}

  return index

}
