// GENERATED CODE - DO NOT EDIT MANUALLY - hookGetFunctionServer.hbs
"use server"

import { {{methodCamelName}} } from "@/db/postgresMainDatabase/schemas/{{schema}}/{{methodCamelName}}"
import { {{indexMethodName}} } from "@/methods/functions/converters"
{{#if indexFields}}
{{#if (eq indexMethodName "arrayToObjectKeysId")}}
import type T{{methodPascalName}}RecordBy{{typeRecordName}} from "@/db/postgresMainDatabase/schemas/{{schema}}/{{methodCamelName}}"
{{else}}
import type T{{methodPascalName}}RecordBy{{typeRecordName}} from "@/db/postgresMainDatabase/schemas/{{schema}}/{{methodCamelName}}"
{{/if}}
{{/if}}

export async function {{methodCamelName}}Server({{#if paramsFields}}parsedParams{{/if}}): Promise<T{{methodPascalName}}RecordBy{{typeRecordName}}>{{/if}} {
  const {{methodCamelName}}Data = await {{methodCamelName}}({{#if paramsFields}}parsedParams{{/if}})


  const data = {{methodCamelName}}Data
    ? ({{{indexMethodName}}}({{{indexMethodArgs}}}, data) as T{{methodPascalName}}RecordBy{{typeRecordName}})
    : {}

  return data

}
