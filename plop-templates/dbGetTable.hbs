// GENERATED CODE - DO NOT EDIT MANUALLY - dbGetTable.hbs
"use server"
import { query } from "@/db/postgresMainDatabase/postgresMainDatabase"

export type {{typeName}} = {
{{#each fields}}
  {{name}}{{optional}}: {{tsType}}
{{/each}}
}

export type {{whereTypeName}} = {
{{#each whereFields}}
  {{name}}{{optional}}: {{tsType}}
{{/each}}
}

export async function get{{methodName}}(where: {{whereTypeName}}) { 
  try {
    const whereClauses = Object.keys(where)
      .map((key) => key + " = $" + (Object.keys(where).indexOf(key) + 1))
      .join(" AND ")

    const params = Object.values(where)

    const sql = `SELECT * FROM {{schema}}.{{table}}${whereClauses ? " WHERE " + whereClauses : ""}`

    const result = await query(sql, params)

    return result.rows as {{typeName}}[]
  } catch (error) {
    console.error("Error fetching get{{methodName}}:", error)
    throw new Error("Failed to fetch get{{methodName}}")
  }
}
