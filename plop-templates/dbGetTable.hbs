// GENERATED CODE - DO NOT EDIT MANUALLY - dbGetTable.hbs

"use server"
import { query } from "@/db/postgresMainDatabase/postgresMainDatabase"

{{#if paramsFields}}
export type {{typeName}}Params = {
{{#each paramsFields}}
  {{name}}: {{tsType}}
{{/each}}
}
{{/if}}

export type {{typeName}} = {
{{#each fields}}
  {{name}}{{optional}}: {{tsType}}
{{/each}}
}


export async function get{{methodName}}({{#if paramsFields}}{{paramsList}}: TParams{{/if}}) {
  try {
    {{#if paramsFields}}
    const sqlParams = [{{paramsList}}]
    const whereClauses = [{{#each paramsFields}}"{{name}} = $" + ({{@index}} + 1){{#unless @last}}, {{/unless}}{{/each}}]
    const sql = `SELECT * FROM {{schema}}.{{table}} WHERE ${whereClauses.join(" AND ")}`
    {{else}}
    const sql = `SELECT * FROM {{schema}}.{{table}}`
    const sqlParams: any[] = []
    {{/if}}

    const result = await query(sql, sqlParams)
    return result.rows as {{typeName}}[]

  } catch (error) {
    console.error("Error fetching get{{methodName}}:", error)
    throw new Error("Failed to fetch get{{methodName}}")
  }
}
