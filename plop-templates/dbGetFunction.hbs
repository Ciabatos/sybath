// GENERATED CODE - DO NOT EDIT MANUALLY - dbGetFunction.hbs

"use server"
import { query } from "@/db/postgresMainDatabase/postgresMainDatabase"

{{#if methodParamsColumns}}
export type {{methodParamsTypeName}} = {
{{#each methodParamsColumns}}
  {{camelName}}: {{tsType}}
{{/each}}
}
{{/if}}


export type {{methodTypeName}} = {
{{#each methodColumns}}
  {{camelName}}{{optional}}: {{tsType}}
{{/each}}
}


{{#if (eq indexMethodName "arrayToObjectKeysId")}}
export type {{indexTypeName}} = Record<string, {{methodTypeName}}>
{{else}}
export type {{indexTypeName}} = Record<number, {{methodTypeName}}> 
{{/if}}

export async function {{methodName}}(params: {{methodParamsTypeName}}) {
  try {
    const sqlParams = Object.values(params)
    const sql = `SELECT * FROM {{schema}}.{{method}}({{sqlParamsPlaceholders}});`
    
    const result = await query(sql, sqlParams)
    return result.rows as {{methodTypeName}}[]
  } catch (error) {
    console.error("Error fetching {{methodName}}:", error)
    throw new Error("Failed to fetch {{methodName}}")
  }
}