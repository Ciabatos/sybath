// GENERATED CODE - DO NOT EDIT MANUALLY - dbGetFunction.hbs

"use server"
import { query } from "@/db/postgresMainDatabase/postgresMainDatabase"

{{#if paramsFields}}
export type T{{methodPascalName}}Params = {
{{#each paramsFields}}
  {{camelName}}: {{tsType}}
{{/each}}
}
{{/if}}


{{{tsReturnType}}}


{{#if indexFields}}
{{#if (eq indexMethodName "arrayToObjectKeysId")}}
export type T{{methodPascalName}}RecordBy{{typeRecordName}} = Record<string, T{{methodPascalName}}>
{{else}}
export type T{{methodPascalName}}RecordBy{{typeRecordName}} = Record<number, T{{methodPascalName}}> 
{{/if}}
{{/if}}

export async function get{{methodPascalName}}(params: T{{methodPascalName}}Params) {
  try {
    const sqlParams = Object.values(params)
    const sql = `SELECT * FROM {{schema}}.{{method}}({{sqlParamsPlaceholders}});`
    
    const result = await query(sql, sqlParams)
    return result.rows as T{{methodPascalName}}[]
  } catch (error) {
    console.error("Error executing get{{methodPascalName}}:", error)
    throw new Error("Failed to execute get{{methodPascalName}}")
  }
}